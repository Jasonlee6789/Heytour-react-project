[{"D:\\CodeProject\\JOB\\heytour\\src\\index.js":"1","D:\\CodeProject\\JOB\\heytour\\src\\App.js":"2","D:\\CodeProject\\JOB\\heytour\\src\\common\\AppMenu.js":"3","D:\\CodeProject\\JOB\\heytour\\src\\common\\AppMenuReducer.js":"4","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobList.js":"5","D:\\CodeProject\\JOB\\heytour\\src\\authentication\\Login.js":"6","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobListAPI.js":"7","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobListContent.js":"8","D:\\CodeProject\\JOB\\heytour\\src\\authentication\\LoginReducer.js":"9","D:\\CodeProject\\JOB\\heytour\\src\\authentication\\LoginAPI.js":"10","D:\\CodeProject\\JOB\\heytour\\src\\common\\SelectForm.js":"11","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\AddJob.js":"12","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobDetail.js":"13"},{"size":187,"mtime":1609146393916,"results":"14","hashOfConfig":"15"},{"size":324,"mtime":1609923867277,"results":"16","hashOfConfig":"15"},{"size":2762,"mtime":1607596968483,"results":"17","hashOfConfig":"15"},{"size":540,"mtime":1607128033171,"results":"18","hashOfConfig":"15"},{"size":1407,"mtime":1610175672445,"results":"19","hashOfConfig":"15"},{"size":3396,"mtime":1607135401572,"results":"20","hashOfConfig":"15"},{"size":2824,"mtime":1610177108111,"results":"21","hashOfConfig":"15"},{"size":3789,"mtime":1610175596190,"results":"22","hashOfConfig":"15"},{"size":894,"mtime":1607085531654,"results":"23","hashOfConfig":"15"},{"size":1838,"mtime":1608688807978,"results":"24","hashOfConfig":"15"},{"size":1181,"mtime":1609925658237,"results":"25","hashOfConfig":"15"},{"size":132,"mtime":1610007373963,"results":"26","hashOfConfig":"15"},{"size":294,"mtime":1610023121342,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1inprzj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\CodeProject\\JOB\\heytour\\src\\index.js",[],["58","59"],"D:\\CodeProject\\JOB\\heytour\\src\\App.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\common\\AppMenu.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\common\\AppMenuReducer.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobList.js",["60","61","62","63"],"D:\\CodeProject\\JOB\\heytour\\src\\authentication\\Login.js",["64"],"import React, { useEffect, useRef, useReducer } from \"react\";\r\nimport { Button, Form, Modal, Message } from \"semantic-ui-react\";\r\nimport { useLogin } from \"./LoginAPI\";\r\nimport authReducer from \"./LoginReducer\";\r\n\r\nexport default function Login(props) {\r\n  const didMountRef = useRef(false);\r\n  const [login, setLogin] = useLogin(null);\r\n\r\n  const [state, dispatch] = useReducer(authReducer, {\r\n    username: \"\",\r\n    password: \"\",\r\n    isError: false,\r\n    isLoading: false,\r\n    validation: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      if (login.isError) {\r\n        dispatch({ type: \"AUTH_ERROR\" });\r\n      } else if (login.isLoading) {\r\n        dispatch({ type: \"AUTH_LOADING\" });\r\n      } else {\r\n        props.onLogin(login.data);\r\n      }\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [login]);\r\n\r\n  function handleLogin() {\r\n    const user = {\r\n      username: state.username,\r\n      password: state.password,\r\n    };\r\n    setLogin(user);\r\n  }\r\n  /*const [user, setUser] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");*/\r\n\r\n  //   const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //   const checkLogin = () => {\r\n  //     setIsLoading(true);\r\n  //     setTimeout(() => {\r\n  //       setIsLoading(false);\r\n  //     }, 2000);\r\n  //   };\r\n  function handleChange(e, { name, value }) {\r\n    dispatch({\r\n      type: \"AUTH_TYPING\",\r\n      payload: { name: name, value: value },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      onClose={props.onClose}\r\n      // onOpen={() => props.onOpen}\r\n      open={props.open}\r\n    >\r\n      <Modal.Header>登录框</Modal.Header>\r\n      <Modal.Content>\r\n        <Form\r\n          onSubmit={handleLogin}\r\n          loading={state.isLoading}\r\n          error={state.isError}\r\n        >\r\n          <Form.Field>\r\n            <Form.Input\r\n              label=\"输入用户名\"\r\n              type=\"text\"\r\n              placeholder=\"User Name\"\r\n              required\r\n              name=\"username\"\r\n              value={state.username}\r\n              //onChange 属性，当Input框的内容被改变的时候，\r\n              //就自动调用onChange中的函数，然后在函数中使用set方法将用户名和密码储存到state中\r\n              // onChange={(e) => {\r\n              //   setUser(e.target.value);\r\n              // }}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field>\r\n            <Form.Input\r\n              label=\"输入密码\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              name=\"password\"\r\n              value={state.password}\r\n              // onChange={(e) => {\r\n              //   setPassword(e.target.value);\r\n              // }}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Button onClick={props.onClose}>Close</Button>\r\n          <Button\r\n            type=\"submit\"\r\n            // onClick={() => {\r\n            //   props.onLogin(user);\r\n            // }}\r\n          >\r\n            Login\r\n          </Button>\r\n          {state.isError && (\r\n            <Message\r\n              error\r\n              header=\"Login Failed\"\r\n              content=\"Please check your username and password.\"\r\n            />\r\n          )}\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobListAPI.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobListContent.js",["65","66"],"import React from \"react\";\r\nimport { Button, Image, Card, Grid, Icon } from \"semantic-ui-react\";\r\n// import data from \"./data.json\";\r\nimport moment from \"moment\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport JobDetail from \"./JobDetail\";\r\nimport axios from \"axios\";\r\n\r\nexport default function JobListContent(props) {\r\n  // function Jump() {\r\n  //   return (\r\n  //     <Router>\r\n  //       <Route path=\"/job/:id\" component={JobDetail} />\r\n  //     </Router>\r\n  //   );\r\n  // }\r\n  // const data = data.map((props.job) => {\r\n  return (\r\n    <Grid.Row>\r\n      <Grid.Column width={16}>\r\n        <Card fluid>\r\n          <Card.Content textAlign=\"left\">\r\n            <Image\r\n              src={props.job.picture}\r\n              size=\"small\"\r\n              wrapped\r\n              floated=\"right\"\r\n            />\r\n            <Card.Header>\r\n              {props.job.title} <br />\r\n              <br />\r\n              Company Name: {props.job.company}\r\n            </Card.Header>\r\n            <Card.Description>\r\n              {\"Listed On: \" + moment(props.job.postedOn).format(\"YYYY-MM-DD\")}\r\n            </Card.Description>\r\n          </Card.Content>\r\n\r\n          <Card.Content textAlign=\"left\">\r\n            <Card.Meta>\r\n              Status:{\" \"}\r\n              {props.job.isActive ? (\r\n                <Icon name=\"circle check\" color=\"green\" content=\"Active\">\r\n                  Active\r\n                </Icon>\r\n              ) : (\r\n                <Icon name=\"times circle\" color=\"red\" content=\"Expired\">\r\n                  Expired\r\n                </Icon>\r\n              )}\r\n            </Card.Meta>\r\n            <Card.Meta>\r\n              Location: {props.job.location} - Industry: {props.job.industry}\r\n            </Card.Meta>\r\n            {/* <Card.Meta>Industry: {props.job.industry}</Card.Meta> */}\r\n            <Card.Meta>Email: {props.job.email}</Card.Meta>\r\n            <Card.Meta>Post Date: {props.job.postedOn}</Card.Meta>\r\n            <Card.Description>{props.job.jobDesc}</Card.Description>\r\n          </Card.Content>\r\n\r\n          <Card.Content>\r\n            <Router>\r\n              <Button\r\n                onClick={(e) => {\r\n                  // props.deleteJob(props.job.id);\r\n                  console.log(\"点击了删除\");\r\n                  const url =\r\n                    \"https://localhost:44351/api/jobs/\" + props.job.id;\r\n                  axios.delete(url);\r\n                }}\r\n                icon=\"minus\"\r\n                floated=\"right\"\r\n                content=\"Delete\"\r\n                color=\"black\"\r\n              />\r\n              <Button\r\n                //onClick={() => props.putJob(props.job.id)}\r\n                icon=\"edit\"\r\n                floated=\"right\"\r\n                content=\"Edit\"\r\n                color=\"green\"\r\n                onClick={() => {\r\n                  console.log(\"点击了更改工作\");\r\n                }}\r\n              />\r\n              <Button\r\n                icon=\"plus\"\r\n                floated=\"right\"\r\n                content=\"Apply\"\r\n                color=\"green\"\r\n              />\r\n              {/* <Link to={\"/job/\" + props.job.id}> */}\r\n              <Button\r\n                icon=\"plus\"\r\n                floated=\"right\"\r\n                content=\"More Details\"\r\n                color=\"green\"\r\n                onClick={() => {\r\n                  console.log(\"点击了Detail\");\r\n                  <Route path=\"/job/:${props.job.id} \" component={JobDetail} />;\r\n                }}\r\n              />\r\n              {/* </Link> */}\r\n              <Button icon=\"star\" floated=\"right\" content=\"Save\" color=\"red\" />\r\n            </Router>\r\n          </Card.Content>\r\n        </Card>\r\n      </Grid.Column>\r\n    </Grid.Row>\r\n  );\r\n  // });\r\n  // return <Grid padded>{data.job}</Grid>;\r\n}\r\n","D:\\CodeProject\\JOB\\heytour\\src\\authentication\\LoginReducer.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\authentication\\LoginAPI.js",["67"],"import { useState, useEffect, useReducer, useRef } from \"react\";\r\n\r\nfunction authAPIReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"AUTH_INIT\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case \"AUTH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data: action.payload,\r\n      };\r\n    case \"AUTH_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport function useLogin(initialUser) {\r\n  const didMountRef = useRef(false);\r\n  //修改ref的值不会重新render,在组件更新时触发\r\n  const mockData = {\r\n    user: \"admin@gmail.com\",\r\n    password: \"123456\",\r\n  };\r\n\r\n  const mockJsonRes =\r\n    '{\"firstName\": \"Admin\", \"lastName\": \"LI\", \"jwt\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"}';\r\n\r\n  const data = JSON.parse(mockJsonRes);\r\n\r\n  const [user, setUser] = useState(null);\r\n\r\n  const [state, dispatch] = useReducer(authAPIReducer, {\r\n    isLoading: false,\r\n    isError: false,\r\n    data: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function sleep(ms) {\r\n      return new Promise((resolve) => setTimeout(resolve, ms));\r\n    }\r\n\r\n    async function authenticate() {\r\n      dispatch({ type: \"AUTH_INIT\" });\r\n      await sleep(600);\r\n\r\n      if (user.password === mockData.password) {\r\n        dispatch({ type: \"AUTH_SUCCESS\", payload: data });\r\n      } else {\r\n        dispatch({ type: \"AUTH_FAILURE\" });\r\n      }\r\n    }\r\n\r\n    if (didMountRef.current) {\r\n      authenticate();\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [user]);\r\n\r\n  return [state, setUser];\r\n}\r\n","D:\\CodeProject\\JOB\\heytour\\src\\common\\SelectForm.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\job-list\\AddJob.js",["68"],"D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobDetail.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":8,"column":19,"nodeType":"75","messageId":"76","endLine":8,"endColumn":37},{"ruleId":"73","severity":1,"message":"77","line":9,"column":10,"nodeType":"75","messageId":"76","endLine":9,"endColumn":27},{"ruleId":"73","severity":1,"message":"78","line":10,"column":10,"nodeType":"75","messageId":"76","endLine":10,"endColumn":14},{"ruleId":"73","severity":1,"message":"79","line":10,"column":16,"nodeType":"75","messageId":"76","endLine":10,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":30,"column":6,"nodeType":"82","endLine":30,"endColumn":13,"suggestions":"83"},{"ruleId":"73","severity":1,"message":"84","line":5,"column":42,"nodeType":"75","messageId":"76","endLine":5,"endColumn":46},{"ruleId":"85","severity":1,"message":"86","line":100,"column":31,"nodeType":"87","messageId":"88","endLine":100,"endColumn":55},{"ruleId":"80","severity":1,"message":"89","line":71,"column":6,"nodeType":"82","endLine":71,"endColumn":12,"suggestions":"90"},{"ruleId":"73","severity":1,"message":"91","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'setJobListFilterer' is assigned a value but never used.","Identifier","unusedVar","'jobDeleteResponse' is assigned a value but never used.","'jobs' is assigned a value but never used.","'setJobs' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["94"],"'Link' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","React Hook useEffect has missing dependencies: 'data' and 'mockData.password'. Either include them or remove the dependency array.",["95"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [login, props]",{"range":"100","text":"101"},"Update the dependencies array to be: [data, mockData.password, user]",{"range":"102","text":"103"},[835,842],"[login, props]",[1763,1769],"[data, mockData.password, user]"]