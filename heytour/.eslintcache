[{"D:\\CodeProject\\JOB\\heytour\\src\\index.js":"1","D:\\CodeProject\\JOB\\heytour\\src\\App.js":"2","D:\\CodeProject\\JOB\\heytour\\src\\common\\AppMenu.js":"3","D:\\CodeProject\\JOB\\heytour\\src\\common\\AppMenuReducer.js":"4","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobList.js":"5","D:\\CodeProject\\JOB\\heytour\\src\\authentication\\Login.js":"6","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobListAPI.js":"7","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobListContent.js":"8","D:\\CodeProject\\JOB\\heytour\\src\\authentication\\LoginReducer.js":"9","D:\\CodeProject\\JOB\\heytour\\src\\authentication\\LoginAPI.js":"10","D:\\CodeProject\\JOB\\heytour\\src\\common\\SelectForm.js":"11","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\AddJob.js":"12","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobDetail.js":"13","D:\\CodeProject\\JOB\\heytour\\src\\common\\NavAdmin.js":"14","D:\\CodeProject\\JOB\\heytour\\src\\pages\\Main.js":"15","D:\\CodeProject\\JOB\\heytour\\src\\config\\apiUrl.js":"16"},{"size":187,"mtime":1609146393916,"results":"17","hashOfConfig":"18"},{"size":372,"mtime":1610274216971,"results":"19","hashOfConfig":"18"},{"size":2918,"mtime":1610186705265,"results":"20","hashOfConfig":"18"},{"size":540,"mtime":1607128033171,"results":"21","hashOfConfig":"18"},{"size":1416,"mtime":1610239852336,"results":"22","hashOfConfig":"18"},{"size":3396,"mtime":1607135401572,"results":"23","hashOfConfig":"18"},{"size":2869,"mtime":1610365625780,"results":"24","hashOfConfig":"18"},{"size":3248,"mtime":1610335892771,"results":"25","hashOfConfig":"18"},{"size":894,"mtime":1607085531654,"results":"26","hashOfConfig":"18"},{"size":1830,"mtime":1610273495683,"results":"27","hashOfConfig":"18"},{"size":1272,"mtime":1610241124680,"results":"28","hashOfConfig":"18"},{"size":5348,"mtime":1610368476444,"results":"29","hashOfConfig":"18"},{"size":294,"mtime":1610023121342,"results":"30","hashOfConfig":"18"},{"size":1079,"mtime":1610351643213,"results":"31","hashOfConfig":"18"},{"size":287,"mtime":1610274155207,"results":"32","hashOfConfig":"18"},{"size":260,"mtime":1610323544406,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1inprzj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\CodeProject\\JOB\\heytour\\src\\index.js",[],["72","73"],"D:\\CodeProject\\JOB\\heytour\\src\\App.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\common\\AppMenu.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\common\\AppMenuReducer.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobList.js",["74","75"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { useJobDelete, useJobList } from \"./JobListAPI\";\r\nimport JobListContent from \"./JobListContent\";\r\nimport SelectForm from \"../common/SelectForm\";\r\n\r\nexport default function JobList() {\r\n  const [jobListResponse, setJobListFilter] = useJobList(null);\r\n  const [jobDeleteResponse, setJobId] = useJobDelete();\r\n\r\n  const [jobs, setJobs] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(jobListResponse);\r\n\r\n    if (jobListResponse.data && !jobListResponse.isError) {\r\n      setJobs(jobListResponse.data);\r\n    }\r\n\r\n    if (jobDeleteResponse.data && !jobDeleteResponse.isError) {\r\n      setJobs(jobs.filter((job) => job.id !== jobDeleteResponse.data));\r\n    }\r\n  }, [jobListResponse, jobDeleteResponse]);\r\n\r\n  function handleDelete(id) {\r\n    setJobId(id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <SelectForm />\r\n      <Grid>\r\n        {/* {jobListResponse.data &&\r\n          jobListResponse.data.map((job, index) => { */}\r\n        {jobs &&\r\n          jobs.map((job, index) => {\r\n            return (\r\n              <JobListContent\r\n                key={job.id}\r\n                //isLoading={jobListResponse.isLoading}\r\n                job={job}\r\n                deleteJob={handleDelete}\r\n                // putJob={onPutjob}\r\n              />\r\n            );\r\n          })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\CodeProject\\JOB\\heytour\\src\\authentication\\Login.js",["76"],"import React, { useEffect, useRef, useReducer } from \"react\";\r\nimport { Button, Form, Modal, Message } from \"semantic-ui-react\";\r\nimport { useLogin } from \"./LoginAPI\";\r\nimport authReducer from \"./LoginReducer\";\r\n\r\nexport default function Login(props) {\r\n  const didMountRef = useRef(false);\r\n  const [login, setLogin] = useLogin(null);\r\n\r\n  const [state, dispatch] = useReducer(authReducer, {\r\n    username: \"\",\r\n    password: \"\",\r\n    isError: false,\r\n    isLoading: false,\r\n    validation: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      if (login.isError) {\r\n        dispatch({ type: \"AUTH_ERROR\" });\r\n      } else if (login.isLoading) {\r\n        dispatch({ type: \"AUTH_LOADING\" });\r\n      } else {\r\n        props.onLogin(login.data);\r\n      }\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [login]);\r\n\r\n  function handleLogin() {\r\n    const user = {\r\n      username: state.username,\r\n      password: state.password,\r\n    };\r\n    setLogin(user);\r\n  }\r\n  /*const [user, setUser] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");*/\r\n\r\n  //   const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //   const checkLogin = () => {\r\n  //     setIsLoading(true);\r\n  //     setTimeout(() => {\r\n  //       setIsLoading(false);\r\n  //     }, 2000);\r\n  //   };\r\n  function handleChange(e, { name, value }) {\r\n    dispatch({\r\n      type: \"AUTH_TYPING\",\r\n      payload: { name: name, value: value },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      onClose={props.onClose}\r\n      // onOpen={() => props.onOpen}\r\n      open={props.open}\r\n    >\r\n      <Modal.Header>登录框</Modal.Header>\r\n      <Modal.Content>\r\n        <Form\r\n          onSubmit={handleLogin}\r\n          loading={state.isLoading}\r\n          error={state.isError}\r\n        >\r\n          <Form.Field>\r\n            <Form.Input\r\n              label=\"输入用户名\"\r\n              type=\"text\"\r\n              placeholder=\"User Name\"\r\n              required\r\n              name=\"username\"\r\n              value={state.username}\r\n              //onChange 属性，当Input框的内容被改变的时候，\r\n              //就自动调用onChange中的函数，然后在函数中使用set方法将用户名和密码储存到state中\r\n              // onChange={(e) => {\r\n              //   setUser(e.target.value);\r\n              // }}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field>\r\n            <Form.Input\r\n              label=\"输入密码\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              name=\"password\"\r\n              value={state.password}\r\n              // onChange={(e) => {\r\n              //   setPassword(e.target.value);\r\n              // }}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Button onClick={props.onClose}>Close</Button>\r\n          <Button\r\n            type=\"submit\"\r\n            // onClick={() => {\r\n            //   props.onLogin(user);\r\n            // }}\r\n          >\r\n            Login\r\n          </Button>\r\n          {state.isError && (\r\n            <Message\r\n              error\r\n              header=\"Login Failed\"\r\n              content=\"Please check your username and password.\"\r\n            />\r\n          )}\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n","D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobListAPI.js",["77"],"D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobListContent.js",["78","79"],"import React from \"react\";\r\nimport { Button, Image, Card, Grid, Icon } from \"semantic-ui-react\";\r\n// import data from \"./data.json\";\r\nimport moment from \"moment\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport JobDetail from \"./JobDetail\";\r\n\r\nexport default function JobListContent(props) {\r\n  // function Jump() {\r\n  //   return (\r\n  //     <Router>\r\n  //       <Route path=\"/job/:id\" component={JobDetail} />\r\n  //     </Router>\r\n  //   );\r\n  // }\r\n  // const data = data.map((props.job) => {\r\n  return (\r\n    <Grid.Row>\r\n      <Grid.Column width={16}>\r\n        <Card fluid>\r\n          <Card.Content textAlign=\"left\">\r\n            <Image\r\n              src={props.job.picture}\r\n              size=\"small\"\r\n              wrapped\r\n              floated=\"right\"\r\n            />\r\n            <Card.Header>\r\n              {props.job.title} <br />\r\n              <br />\r\n              Company Name: {props.job.company}\r\n            </Card.Header>\r\n            <Card.Description>\r\n              {\"Listed On: \" + moment(props.job.postedOn).format(\"YYYY-MM-DD\")}\r\n            </Card.Description>\r\n          </Card.Content>\r\n\r\n          <Card.Content textAlign=\"left\">\r\n            <Card.Meta>\r\n              Status:{\" \"}\r\n              {props.job.isActive ? (\r\n                <Icon name=\"circle check\" color=\"green\" content=\"Active\">\r\n                  Active\r\n                </Icon>\r\n              ) : (\r\n                <Icon name=\"times circle\" color=\"red\" content=\"Expired\">\r\n                  Expired\r\n                </Icon>\r\n              )}\r\n            </Card.Meta>\r\n            <Card.Meta>\r\n              Location: {props.job.location} - Industry: {props.job.industry}\r\n            </Card.Meta>\r\n            {/* <Card.Meta>Industry: {props.job.industry}</Card.Meta> */}\r\n            <Card.Meta>Email: {props.job.email}</Card.Meta>\r\n            <Card.Meta>Post Date: {props.job.postedOn}</Card.Meta>\r\n            <Card.Description>{props.job.jobDesc}</Card.Description>\r\n          </Card.Content>\r\n\r\n          <Card.Content>\r\n            <Router>\r\n              <Button\r\n                onClick={(e) => {\r\n                  props.deleteJob(props.job.id);\r\n                  console.log(\"点击了删除\");\r\n                  // const url =\r\n                  //   \"https://localhost:44351/api/jobs/\" + props.job.id;\r\n                  // axios.delete(url);\r\n                }}\r\n                icon=\"minus\"\r\n                floated=\"right\"\r\n                content=\"Delete\"\r\n                color=\"teal\"\r\n              />\r\n\r\n              <Button icon=\"plus\" floated=\"right\" content=\"Apply\" primary />\r\n\r\n              <Button\r\n                icon=\"edit\"\r\n                floated=\"right\"\r\n                content=\"More Details\"\r\n                primary\r\n                onClick={() => {\r\n                  console.log(\"点击了Detail\");\r\n                  <Route path=\"/job/:${props.job.id} \" component={JobDetail} />;\r\n                }}\r\n              />\r\n\r\n              <Button icon=\"star\" floated=\"right\" content=\"Save\" primary />\r\n            </Router>\r\n          </Card.Content>\r\n        </Card>\r\n      </Grid.Column>\r\n    </Grid.Row>\r\n  );\r\n  // });\r\n  // return <Grid padded>{data.job}</Grid>;\r\n}\r\n","D:\\CodeProject\\JOB\\heytour\\src\\authentication\\LoginReducer.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\authentication\\LoginAPI.js",["80"],"import { useState, useEffect, useReducer, useRef } from \"react\";\r\n\r\nfunction authAPIReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"AUTH_INIT\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case \"AUTH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data: action.payload,\r\n      };\r\n    case \"AUTH_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport function useLogin(initialUser) {\r\n  const didMountRef = useRef(false);\r\n  //修改ref的值不会重新render,在组件更新时触发\r\n  const mockData = {\r\n    userName: \"JL\",\r\n    password: \"123456\",\r\n  };\r\n\r\n  const mockJsonRes =\r\n    '{\"firstName\": \"Admin\", \"lastName\": \"Lee\", \"jwt\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"}';\r\n\r\n  const data = JSON.parse(mockJsonRes);\r\n\r\n  const [user, setUser] = useState(null);\r\n\r\n  const [state, dispatch] = useReducer(authAPIReducer, {\r\n    isLoading: false,\r\n    isError: false,\r\n    data: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function sleep(ms) {\r\n      return new Promise((resolve) => setTimeout(resolve, ms));\r\n    }\r\n\r\n    async function authenticate() {\r\n      dispatch({ type: \"AUTH_INIT\" });\r\n      await sleep(600);\r\n\r\n      if (user.password === mockData.password) {\r\n        dispatch({ type: \"AUTH_SUCCESS\", payload: data });\r\n      } else {\r\n        dispatch({ type: \"AUTH_FAILURE\" });\r\n      }\r\n    }\r\n\r\n    if (didMountRef.current) {\r\n      authenticate();\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [user]);\r\n\r\n  return [state, setUser];\r\n}\r\n","D:\\CodeProject\\JOB\\heytour\\src\\common\\SelectForm.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\job-list\\AddJob.js",["81","82","83","84","85","86","87","88","89"],"D:\\CodeProject\\JOB\\heytour\\src\\job-list\\JobDetail.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\common\\NavAdmin.js",["90"],"import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport AddJob from \"../job-list/AddJob\";\r\n\r\nexport default function NavAdmin() {\r\n  function toAddJob() {\r\n    <Router>\r\n      <Route path=\"/addjob\" exact component={AddJob} />\r\n    </Router>;\r\n  }\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <AddJob />\r\n        {/* <Link to=\"/addjob\">\r\n          <Button\r\n            primary\r\n            content=\"Post \"\r\n            icon=\"add\"\r\n            onClick={() => {\r\n              <AddJob />;\r\n\r\n              console.log(\"点击了添加新工作\");\r\n            }}\r\n          />\r\n        </Link> */}\r\n        <Link to=\"/editjob/\">\r\n          <Button\r\n            //onClick={() => props.putJob(props.job.id)}\r\n            //icon=\"edit\"\r\n            //floated=\"left\"\r\n            content=\"Edit\"\r\n            primary\r\n            onClick={() => {\r\n              console.log(\"点击了更改工作\");\r\n            }}\r\n          />\r\n        </Link>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","D:\\CodeProject\\JOB\\heytour\\src\\pages\\Main.js",[],"D:\\CodeProject\\JOB\\heytour\\src\\config\\apiUrl.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":8,"column":27,"nodeType":"97","messageId":"98","endLine":8,"endColumn":43},{"ruleId":"99","severity":1,"message":"100","line":23,"column":6,"nodeType":"101","endLine":23,"endColumn":42,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":30,"column":6,"nodeType":"101","endLine":30,"endColumn":13,"suggestions":"104"},{"ruleId":"95","severity":1,"message":"105","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":19},{"ruleId":"95","severity":1,"message":"106","line":5,"column":42,"nodeType":"97","messageId":"98","endLine":5,"endColumn":46},{"ruleId":"107","severity":1,"message":"108","line":85,"column":31,"nodeType":"109","messageId":"110","endLine":85,"endColumn":55},{"ruleId":"99","severity":1,"message":"111","line":71,"column":6,"nodeType":"101","endLine":71,"endColumn":12,"suggestions":"112"},{"ruleId":"95","severity":1,"message":"113","line":21,"column":10,"nodeType":"97","messageId":"98","endLine":21,"endColumn":12},{"ruleId":"95","severity":1,"message":"114","line":22,"column":10,"nodeType":"97","messageId":"98","endLine":22,"endColumn":18},{"ruleId":"95","severity":1,"message":"115","line":23,"column":10,"nodeType":"97","messageId":"98","endLine":23,"endColumn":15},{"ruleId":"95","severity":1,"message":"116","line":24,"column":10,"nodeType":"97","messageId":"98","endLine":24,"endColumn":18},{"ruleId":"95","severity":1,"message":"117","line":25,"column":10,"nodeType":"97","messageId":"98","endLine":25,"endColumn":18},{"ruleId":"95","severity":1,"message":"118","line":27,"column":10,"nodeType":"97","messageId":"98","endLine":27,"endColumn":17},{"ruleId":"95","severity":1,"message":"119","line":28,"column":10,"nodeType":"97","messageId":"98","endLine":28,"endColumn":15},{"ruleId":"95","severity":1,"message":"120","line":29,"column":10,"nodeType":"97","messageId":"98","endLine":29,"endColumn":17},{"ruleId":"95","severity":1,"message":"121","line":30,"column":10,"nodeType":"97","messageId":"98","endLine":30,"endColumn":18},{"ruleId":"95","severity":1,"message":"122","line":7,"column":12,"nodeType":"97","messageId":"98","endLine":7,"endColumn":20},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'setJobListFilter' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'jobs'. Either include it or remove the dependency array. You can also do a functional update 'setJobs(j => ...)' if you only need 'jobs' in the 'setJobs' call.","ArrayExpression",["125"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["126"],"'servicePath' is defined but never used.","'Link' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","React Hook useEffect has missing dependencies: 'data' and 'mockData.password'. Either include them or remove the dependency array.",["127"],"'id' is assigned a value but never used.","'isActive' is assigned a value but never used.","'title' is assigned a value but never used.","'location' is assigned a value but never used.","'industry' is assigned a value but never used.","'company' is assigned a value but never used.","'email' is assigned a value but never used.","'jobDesc' is assigned a value but never used.","'postedOn' is assigned a value but never used.","'toAddJob' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [jobListResponse, jobDeleteResponse, jobs]",{"range":"134","text":"135"},"Update the dependencies array to be: [login, props]",{"range":"136","text":"137"},"Update the dependencies array to be: [data, mockData.password, user]",{"range":"138","text":"139"},[774,810],"[jobListResponse, jobDeleteResponse, jobs]",[835,842],"[login, props]",[1755,1761],"[data, mockData.password, user]"]